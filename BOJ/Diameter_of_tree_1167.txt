트리의 지름 22DEC20 pm9:35
-이해
-방법계획
-검증
-손코딩
-

문제
트리의 지름이란, 트리에서 임의의 두 점 사이의 거리 중 가장 긴 것을 말한다. 트리의 지름을 구하는 프로그램을 작성하시오.

입력
트리가 입력으로 주어진다. 먼저 첫 번째 줄에서는 트리의 정점의 개수 V가 주어지고 (2≤V≤100,000)
둘째 줄부터 V개의 줄에 걸쳐 간선의 정보가 다음과 같이 주어진다. (정점 번호는 1부터 V까지 매겨져 있다고 생각한다)

먼저 정점 번호가 주어지고, 이어서 연결된 간선의 정보를 의미하는 정수가 두 개씩 주어지는데, 하나는 정점번호, 
다른 하나는 그 정점까지의 거리이다. 
예를 들어 네 번째 줄의 경우 정점 3은 정점 1과 거리가 2인 간선으로 연결되어 있고, 
정점 4와는 거리가 3인 간선으로 연결되어 있는 것을 보여준다. 
각 줄의 마지막에는 -1이 입력으로 주어진다. 
주어지는 거리는 모두 10,000 이하의 자연수이다.

출력
첫째 줄에 트리의 지름을 출력한다.


#문제이해
임의의 두 점 사이의 거리 중 가장 긴 것이 트리의 지름이다.
거리라는 것은 가장 짧은 길이를 의미 -> 최단경로 
트리의 모든 노드 중 임의의 두 점의 최단경로가 가장 긴 것
모든 정점에서 다른 모든 정점으로 향하는 거리를 구하는 것
그 중 최단 경로가 가장 긴 것이 트리의 지름.


#문제재정의
트리의 지름
가장 '거리'가 먼 두 노드의 거리가 트리의 지름


#해결방법

--첫번째 방법 (플로이드 와샬)
정점별 간선정보를 인접리스트로 구성 X
인접리스트를 인접행렬로 변경 X
처음부터 인접행렬로 구성
인접행렬을 이용하여 가중치 2차원 가중치배열 생성
가중치배열과 인접행렬을 이용해서 와살 플로이드 알고리즘으로 문제풀이

반복문을 다 돌고서 
가중치가 가장 큰 값(거리)를 결과값으로 return
메모리 부족으로 실패 

서로 가장 먼 노드를 찾아서 그 둘의 거리를 구한다.
가장 먼 노드는 어떻게 찾을 것인가?

--두번째 방법(가장 먼 노드를 찾아서 거리 탐색)
가장 차수가 높은 노드를 center라고 했을 때
center에서부터 bfs로 거리 탐색을 한다.
center에서 거리가 먼 노드 2개를 선택한다.
굳이 center를 찾아야하나?
모든 노드가 연결되어 있으면 상관없지만 
연결 안되어 있는 경우?
트리에서 그런 경우는 없다
단 중간에 경로가 겹쳐서는 안된다.
그러므로 O(n) 





#검증
--첫번째 방법
와살 플로이드 방법이 맞는가?
가장 먼 두 노드의 거리를 반환

인접리스트를 행렬로 바꾸어야하는가?
바로 인접행렬로는 못받나?
가능(다른이 코드 참고)

메모리 부족으로 실패
10만개의 n^2

--두번째 방법
그런데 가장 차수가 높은 노드가 center가 맞는가?
가장 차수가 높은 노드가 2개 이상이라면?


#실행




#회고





