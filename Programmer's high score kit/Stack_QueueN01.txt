주식가격

초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은
몇 초인지를 return

제한사항
prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.
prices의 길이는 2 이상 100,000 이하입니다.
입출력 예
prices	return
[1, 2, 3, 2, 3]	[4, 3, 1, 1, 0]
입출력 예 설명
1초 시점의 ₩1은 끝까지 가격이 떨어지지 않았습니다.
2초 시점의 ₩2은 끝까지 가격이 떨어지지 않았습니다.
3초 시점의 ₩3은 1초뒤에 가격이 떨어집니다. 따라서 1초간 가격이 떨어지지 않은 것으로 봅니다.
4초 시점의 ₩2은 1초간 가격이 떨어지지 않았습니다.
5초 시점의 ₩3은 0초간 가격이 떨어지지 않았습니다.


#문제이해
초마다 기록된 주식가격 배열에서 
가격이 떨어지지 않은 기간을 첫번쨰 원소값부터 몇초인지 순서대로 기록하여 return


#문제해결방법
첫 원소가 끝까지 떨어지지 않았으면 모든 시간을 기록 
그런데 매 원소마다 매번 떨어졌나 아니었나 확인해야하는가?
효율적인 방법은 없는가? 기준은 오직 나 자신?

각 원소별로 순회하면서 자신의 가격보다 떨어진 값이 나올떄까지?
10만개이니 최악의 경우 
(10만+1)*10만/2
n(n+1)/2 = O(n**2)

매번 비교하지 않으면 언제 떨어졌는지 어떻게 알것인가?
한번에 일괄적으로 비교할수도 있나?
현재까지 나온원소보다 작은값 
그렇게 할려면 원 배열이랑 같은 크기의 배열을 미리 선언하고 
값이 나온애들은 그때그때 해당 위치에 값(몇초동안 주식금액이 유지,상승하였는지)을 입력한다.

단점 비교연산과 어떤 위치인지 알기 위해 인덱스와 값을 둘다 가지고 있어야한다.
생각해보니 최악의 경우(모든 주식액이 항상 같거나 적어도 상승하는 경우, 그래서 끝까지 비교해야하는 경우)
n, n-1, ..., 2, 1번 비교해야하는 것은 같다.
거기에 큐를 사용해서 해시에{'인덱스': '주식액'} 담기 때문에 작업이 더 추가된다.

큐, 스택과 이번 문제의 해결과의 연관성
선입선출, 후입선출

주식감소할때까지의 시간을 기록하는 현재의 시스템은 
첫 원소부터 몇초간 유지,상승하였는지 return될 배열에 순서대로 기록되어야한다.
그런 점에서 큐가 더 어울릴거라 생각든다.

꼭 매 순간 주식가격이 감소하였는지 확인해야만 하나?
아니고서 확인 할수 있는 방법이 있는가?



#실행
O(n^2)의 낮은 효율성으로 통과



#반성
- 다른 자료구조(스택, 큐)를 더 쓸려고 생각하지 않은 점
- 코드를 프로그램 흐름에 맞게 자연스럽게 작성하지 못한 점
  중간중간 거슬리는 if문, 마지막인지 확인하기 위한 if문 등 
  그런 표현없이 한눈에 읽힐 수 있게 작성 필요
  


