징검다리
출발지점으로부터 distance만큼 떨어진 곳에 도착지점이 있다.

그리고 그사이에는 바위들이 놓여있다. 바위 중 몇개를 제거하려고 한다.
예를 들어, 도착지점이 25만큼 떨어져 있고, 바위가 [2,14,11,21,17] 지점에 
놓여있다.
바위 2개를 제거하면 출발지점, 도착지점, 바위간의 거리가 아래와 같아진다.


위에 에서 구한 거ㅇ리의 최솟값 중에 가장 큰값을 결과로 return한다.


0, distance

#문제이해
시작점과 목표지점(distance만큼) 사이에 있는 바위들을 
n개 만큼 치웠을때 각 지점간의 거리의 최솟값을 구한다.
n개씩 치운 모든 경우의 최솟값들 중에서 최댓값을 return

#문제해결
시작점은 0, 목표지점은 distance

바위들을 전체 바위 갯수에서 n개를 뺸 가짓수중에 
전체 바위 수 = rock

순서 상관없이 (rock - n)개의 바위를 뽑는다.
오름차순으로 정렬하며 맨 앞과 뒤에 0,distance를 추가한다.
이후 시작점부터 중간에 있는 바위를 포함해서 끝점까지 바위 간의 거리를 
배열로 담는다. 거리의 최솟값을 minimum 변수에 담는다.

모든 경우의 수를 반복하며 앞에 minimum 값과 비교해서 
현재 경우의 수에서 나온 바위 사이의 거리 최솟값이  minimum보다 크면 
minimum값을 현재의 최솟값으로 변경한다.

어떻게 문제를 쪼갤것인가?
이분탐색과 이 문제와 무슨 연관인가?



nC(rock - n)






#실행


#반성
